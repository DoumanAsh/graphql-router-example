schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Product
  @join__owner(graph: PRODUCT)
  @join__type(graph: PRODUCT, key: "upc")
  @join__type(graph: REVIEW, key: "upc")
{
  name: String! @join__field(graph: PRODUCT)
  price: Int! @join__field(graph: PRODUCT)
  reviews: [Review!]! @join__field(graph: REVIEW)
  upc: String! @join__field(graph: PRODUCT)
}

type Query {
  me: User! @join__field(graph: USER)
  topProducts: [Product!]! @join__field(graph: PRODUCT)
}

type Review {
  author: User!
  body: String!
  product: Product!
}

type User
  @join__owner(graph: USER)
  @join__type(graph: USER, key: "id")
  @join__type(graph: REVIEW, key: "id")
{
  id: ID! @join__field(graph: USER)
  reviews: [Review!]! @join__field(graph: REVIEW)
  username: String! @join__field(graph: USER)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  PRODUCT @join__graph(name: "product" url: "http://127.0.0.1:9000/product")
  REVIEW @join__graph(name: "review" url: "http://127.0.0.1:9000/review")
  USER @join__graph(name: "user" url: "http://127.0.0.1:9000/user")
}
